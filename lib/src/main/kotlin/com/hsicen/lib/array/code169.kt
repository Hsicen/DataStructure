package com.hsicen.lib.array/** * 作者：hsicen  8/4/21 09:27 * 邮箱：codinghuang@163.com * 作用： * 描述：多数元素 * * 给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于⌊ n/2 ⌋的元素。 * 你可以假设数组是非空的，并且给定的数组总是存在多数元素。 */fun majorityElement(nums: IntArray): Int {    nums.sort()    var cur = nums[0]    var curCount = 0    var max = nums[0]    var maxCount = 0    for (pos in nums) {        if (pos == cur) {            curCount++            if (curCount > maxCount) {                maxCount = curCount                max = cur            }        } else {            cur = pos            curCount = 1        }    }    return max}// 摩尔投票法  相同为1不同为0，最后为1的那个数为大于数组一半的数fun majorityElement2(nums: IntArray): Int {    var ret = nums[0]    var count = 0    for (num in nums) {        when {            0 == count -> {                ret = num                count = 1            }            ret == num -> count++            else -> count--        }    }    return ret}fun main() {    val src = intArrayOf(2, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1)    println("众数为: ${majorityElement2(src)}")}