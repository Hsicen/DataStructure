package com.hsicen.lib.array/** * 作者：hsicen  8/2/21 18:11 * 邮箱：codinghuang@163.com * 作用： * 描述：有序数组实现 */class LinkArray(private val size: Int) {    private val items = IntArray(size + 1) { -1 }    private var len = 0    fun add(item: Int): Boolean {        if (len >= size) {            println("容量已满，添加${item}失败")            return false        }        if (0 == len || item >= items[len - 1]) {            items[len++] = item        } else {            //查找位置            repeat(len) { pos ->                if (items[pos] > item) {                    for (index in len downTo (pos + 1)) {                        println("index:$index")                        items[index] = items[index - 1]                    }                    items[pos] = item                    len++                    return true                }            }        }        return false    }    fun delete(item: Int): Boolean {        repeat(len) { pos ->            if (items[pos] == item) {                for (index in pos until len) {                    items[index] = items[index + 1]                }                items[--len] = -1                return true            }        }        return false    }    fun update(old: Int, new: Int): Boolean {        repeat(len) { pos ->            if (items[pos] == old) {                if (delete(old)) {                    add(new)                }                return true            }        }        return false    }    override fun toString(): String {        return items.toList().toString()    }}fun main() {    val link = LinkArray(10)    link.add(3)    link.add(2)    link.add(6)    link.add(5)    link.add(7)    link.add(9)    link.add(1)    link.add(0)    link.add(12)    link.add(8)    link.add(4)    println(link.toString())    link.delete(5)    println(link.toString())    link.update(3, 33)    link.add(75)    link.add(5)    println(link.toString())}