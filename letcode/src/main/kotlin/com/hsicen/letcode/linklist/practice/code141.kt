package com.hsicen.letcode.linklist.practice/** * 作者：hsicen  8/9/21 09:21 * 邮箱：codinghuang@163.com * 作用： * 描述：判断单链表是否有环 */class ListNode(var `val`: Int) {    var next: ListNode? = null    override fun toString(): String {        val sb = StringBuilder()        sb.append("[$`val`")        var head = next        while (head != null) {            sb.append(", ${head.`val`}")            head = head.next        }        sb.append("]")        return sb.toString()    }}// use fast and slow pointer to check the [head] wheather has circlefun hasCycle(head: ListNode?): Boolean {    var slow = head    var fast = head?.next    while (null != fast) {        fast = fast.next?.next        slow = slow?.next        if (fast == slow) return true    }    return false}