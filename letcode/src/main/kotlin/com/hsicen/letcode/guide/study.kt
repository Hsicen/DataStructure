package com.hsicen.letcode.guide/** * 作者：hsicen  8/2/21 16:44 * 邮箱：codinghuang@163.com * 作用： * 描述：专栏学习指导 * * 难易程度：Easy，Medium，Hard * 是否重点：1~10 *//** 1.复杂度分析 * - 掌握代码的时间和空间复杂度分析 * - 掌握递归代码的两种分析方法：递推公式，递归树 * * 难易程度：Medium * 是否重点：10 * 掌握程度：能够自行分析专栏中出现的数据结构和算法的时间、空间复杂度 * *//** 2.数组、栈、队列 * - 掌握这三种数据结构与对应的算法实现 * * 难易程度：Easy * 是否重点：8 * 掌握程度：能够实现动态数组、栈、队列 * *//** 3.链表 * - 掌握链表的经典操作 * * 难易程度：Medium * 是否重点：9 * 掌握程度：掌握链表的经典操作：如链表的反转、求中间结点 * *//** 4.递归 * - 掌握斐波那契数列，阶乘 * - 掌握归并排序，快速排序，二叉树遍历，二叉树高度 * - 掌握八皇后，背包等问题 * * 难易程度：Hard * 是否重点：10 * 掌握程度：轻松写出二叉树遍历、八皇后、背包问题、DFS的递归代码 * *//** 5.排序、二分查找 * - 看懂专栏内容 * * 难易程度：Easy * 是否重点：7 * 掌握程度：能自己实现各种排序算法、二分查找及其变体代码 * *//** 6.跳表 * - 对于初学者来说，并不需要非得掌握跳表，所以，如果没有精力，这一章节可以先跳过 * * 难易程度：Medium * 是否重点：6 * 掌握程度：看懂专栏内容即可，不需要掌握代码实现 * *//** 7.散列表 * - 作为一种应用非常广泛的数据结构，你还是要掌握牢固散列表 * * 难易程度：Medium * 是否重点：8 * 掌握程度：自己能代码实现一个拉链法解决冲突的散列表即可 * *//** 8.哈希算法 * - 纯粹是为了开拓思路，初学者可以略过 * * 难易程度：Easy * 是否重点：3 * 掌握程度：可以暂时不看 * *//** 9.二叉树 * - 非常重要，面试中经常被考察到(不包括红黑树内容) * * 难易程度：Medium * 是否重点：9 * 掌握程度：能代码实现二叉树的三种遍历算法、按层遍历、求高度等经典二叉树题目 * *//** 10.红黑树 * - 不是很重要，看不懂可以完全不看 * * 难易程度：Hard * 是否重点：3 * 掌握程度：初学者不用把时间浪费在上面 * *//** 11.B+树 * - 不是重点，看懂专栏即可 * * 难易程度：Medium * 是否重点：5 * 掌握程度：可以不看 * *//** 12.堆与堆排序 * - 需要掌握专栏内容 * * 难易程度：Medium * 是否重点：8 * 掌握程度：能代码实现堆、堆排序，并且掌握堆的三种应用（优先级队列、Top k、中位数） * *//** 13.图的表示 * - 掌握图的基本概念、表示方法 * * 难易程度：Easy * 是否重点：8 * 掌握程度：理解图的三种表示方法（邻接矩阵、邻接表、逆邻接表），能自己代码实现 * *//** 14.深度广度优先搜索 * - 图上最基础的遍历或搜索算法，需要掌握 * - 广度优先搜索(BFS)：队列+层序遍历实现 * - 深度优先搜素(DFS)：栈+递归实现 * * 难易程度：Hard * 是否重点：8 * 掌握程度：能代码实现广度优先、深度优先搜索算法 * *//** 15.拓扑排序、最短路径、A*树 * - 不是重点 * * 难易程度：Hard * 是否重点：5 * 掌握程度：可以暂时不看，有时间再看 * *//** 16.字符串匹配(BF、RK) * - 算法不难，需要掌握 * * 难易程度：Easy * 是否重点：7 * 掌握程度：能实践 BF 算法，能看懂 RK 算法 * *//** 17.字符串匹配(BM、KMP、AC自动机) * - 能够看懂就行、不需要代码实现 * * 难易程度：Hard * 是否重点：3 * 掌握程度：初学时不必把时间浪费在上面 * *//** 18.字符串匹配(Trie) * - 能够看懂就行、不需要代码实现 * * 难易程度：Medium * 是否重点：7 * 掌握程度：能够看懂、知道特点、应用场景即可，不需要代码实现 * *//** 19.位图 * - 不是重点、有余力时尽量掌握 * * 难易程度：Easy * 是否重点：6 * 掌握程度：能够看懂，能自己实现一个位图结构最好 * *//** 20.四种算法思想 * - 重难点，长时间学习，需要大量刷题 * * 难易程度：Hard * 是否重点：10 * 掌握程度：可以放到最后，但是一定要掌握！做到能实现 Leetcode 上 Medium 难度的题目 * */