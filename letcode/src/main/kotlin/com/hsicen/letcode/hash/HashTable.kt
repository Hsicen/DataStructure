package com.hsicen.letcode.hash

/**
 * 作者：hsicen  7/5/21 13:51
 * 邮箱：codinghuang@163.com
 * 作用：
 * 描述：散列表(散列函数+数组)  hash(key) = value
 * 散列函数要求：
 * 1.散列函数得到的散列值是一个非负整数
 * 2.如果 key1 = key2, 那么 hash(key1) = hash(key2)
 * 3.如果 key1 ≠ key2, 那么 hash(key1) ≠ hash(key2)
 *
 * 散列函数的设计：
 * 1.数据分析法，分析数据，得出散列规则
 * 2.直接寻址
 * 3.平方取中法
 * 4.折叠法
 * 5.随机数法
 *
 * 散列冲突：
 * 对于 [key1 ≠ key2, 那么 hash(key1) ≠ hash(key2)] 要求，一般的散列函数都不可能实现，所以就会出现散列冲突
 * 散列冲突解决方法：
 * 1.开放寻址法(适用于数据量小的场景)
 *  线性探测(hash(key)+0/1/2/3/4)
 *  二次探测(hash(key)+0/1^2/2^2/3^2/4^2)
 *  双重散列(使用一组散列函数)
 * 2.链表法(适用于存储大对象、大数据量的散列表)
 *
 * 高效扩容：
 * 通过均摊法，将一次性扩容的代价，均摊到多次插入操作中，就避免了一次性扩容耗时过多的情况。
 * 这种实现方式，任何情况下，插入一个数据的时间复杂度都是 O(1)
 */
